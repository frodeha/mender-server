openapi: 3.0.1
info:
  title: Device inventory filters and search
  description: |
    An API for inventory-based filters management and device search.
    It is intended for use by the web GUI.

    Devices can upload vendor-specific attributes (software/hardware info, health checks, metrics, etc.) of various data types to the backend as scoped attributes.

    This API enables the user to:
    * search devices by inventory scoped attribute value
    * use the results to create and manage device groups for deployment scheduling
  version: "2"
tags:
  - name: Management API
paths:
  /api/management/v2/inventory/filters/attributes:
    get:
      tags:
      - Management API
      summary: Get the list of filterable inventory attributes
      description: |
        Returns a list of filterable inventory attributes.

        The list is sorted in descending order by the count of occurrences of the
        attribute in the inventory database, then in ascending order by scope and name.

        Limitations:
         * The API considers up to a sample of 5,000 devices when aggregating the number of attributes.
         * The API returns up to 500 unique attributes.
      operationId: Get filterable attributes
      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                title: List of filter attributes
                type: array
                items:
                  $ref: '#/components/schemas/FilterAttribute'
        "500":
          $ref: '../common/responses.yaml#/components/responses/InternalServerError'
      security:
      - ManagementJWT: []
  /api/management/v2/inventory/filters/search:
    post:
      tags:
      - Management API
      summary: Search devices based on inventory attributes
      description: |
        Returns a paged collection of devices and their attributes.

        If multiple filter predicates are specified, the filters are
        combined using boolean `and` operator.
      operationId: Inventory V2 Search Device Inventories
      requestBody:
        description: The search and sort parameters of the filter
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: Starting page.
                  format: integer
                per_page:
                  type: number
                  description: Maximum number of results per page.
                  format: integer
                text:
                  type: string
                  description: Free-text search query
                filters:
                  type: array
                  description: List of filter predicates.
                  items:
                    $ref: './schemas.yaml#/components/schemas/FilterPredicate'
                sort:
                  type: array
                  description: List of ordered sort criterias
                  items:
                    $ref: './schemas.yaml#/components/schemas/SortCriteria'
                attributes:
                  type: array
                  description: List of attributes to select and return
                  items:
                    $ref: '#/components/schemas/SelectAttribute'
        required: false
      responses:
        "200":
          description: Successful response.
          headers:
            X-Total-Count:
              description: Total number of devices matched query.
              schema:
                type: string
            Link:
              description: |
                Standard header used for page navigation, page relations: 'first', 'next' and 'prev'.
              schema:
                type: string
          content:
            application/json:
              schema:
                title: ListOfDevices
                type: array
                items:
                  $ref: '#/components/schemas/DeviceInventory'
              example:
              - id: 291ae0e5956c69c2267489213df4459d19ed48a806603def19d417d004a4b67e
                attributes:
                - name: ip_addr
                  scope: inventory
                  value: 1.2.3.4
                  description: IP address
                - name: mac_addr
                  scope: inventory
                  value: 00.01:02:03:04:05
                  description: MAC address
                updated_ts: 2016-10-03T16:58:51.639Z
              - id: 76f40e5956c699e327489213df4459d1923e1a806603def19d417d004a4a3ef
                attributes:
                - name: mac
                  scope: inventory
                  value: 00:01:02:03:04:05
                  description: MAC address
                updated_ts: 2016-10-04T18:24:21.432Z
        "400":
          $ref: '../common/responses.yaml#/components/responses/InvalidRequestError'
        "500":
          $ref: '../common/responses.yaml#/components/responses/InternalServerError'
      security:
      - ManagementJWT: []
components:
  securitySchemes:
    ManagementJWT:
      $ref: '../common/securitySchemes.yaml#/components/securitySchemes/ManagementJWT'
  schemas:
    DeviceInventory:
      type: object
      properties:
        id:
          type: string
          description: Mender-assigned unique ID.
        updated_ts:
          type: string
          description: Timestamp of the most recent attribute update.
        attributes:
          type: array
          description: A list of attribute descriptors.
          items:
            $ref: './schemas.yaml#/components/schemas/AttributeV2'
      example:
        id: 291ae0e5956c69c2267489213df4459d19ed48a806603def19d417d004a4b67e
        attributes:
        - name: ip_addr
          scope: inventory
          value: 1.2.3.4
          description: IP address
        - name: mac_addr
          scope: inventory
          value: 00.01:02:03:04:05
          description: MAC address
        updated_ts: 2016-10-03T16:58:51.639Z
    FilterAttribute:
      required:
      - count
      - name
      - scope
      type: object
      properties:
        name:
          type: string
          description: Name of the attribute.
        scope:
          $ref: '../common/schemas.yaml#/components/schemas/Scope'
        count:
          type: integer
          description: Number of occurrences of the attribute in the database.
      description: Filterable attribute
      example:
        name: serial_no
        scope: inventory
        count: 10
    SelectAttribute:
      required:
      - attribute
      - scope
      type: object
      properties:
        attribute:
          type: string
          description: Attribute name.
        scope:
          $ref: '../common/schemas.yaml#/components/schemas/Scope'
      description: Inventory attribute
      example:
        attribute: serial_no
        scope: inventory
    Scope:
      type: string
      description: |
        The scope of the attribute.

        Scope is a string and acts as namespace for the attribute name.

        * __inventory__: Attributes reported by the device.
        * __system__: Attributes populated by the mender-server.
        * __identity__: Device's identity attributes provided in the device's auth request.
        * __monitor__: Attributes populated by the monitoring add-on.
        * __tags__: User-defined attributes associated with the device.
      enum:
        - system
        - identity
        - inventory
        - monitor
        - tags
